version: '3.8'

services:
  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - airflow_net

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    depends_on:
      - airflow-postgres
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH=/opt/airflow         
    volumes:
      - ./dags:/opt/airflow/dags
      - ./utils:/opt/airflow/utils      
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: webserver
    restart: unless-stopped
    networks:
      - airflow_net
    dns:
      - 8.8.8.8

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    depends_on:
      - airflow-postgres
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - PYTHONPATH=/opt/airflow        
    volumes:
      - ./dags:/opt/airflow/dags
      - ./utils:/opt/airflow/utils      
      - ./requirements.txt:/requirements.txt
    command: scheduler
    restart: unless-stopped
    networks:
      - airflow_net
    dns:
      - 8.8.8.8

  airflow-init:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - airflow-postgres
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
    command: db init
    networks:
      - airflow_net
    dns:
      - 8.8.8.8

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - airflow_net

  streamlit:
    build:
      context: ./streamlit_app
      dockerfile: Dockerfile
    container_name: streamlit-dashboard
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit_app:/app
      - ./utils:/app/utils               
    working_dir: /app
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - airflow_net
    dns:
      - 8.8.8.8

volumes:
  postgres_data:
  mongo_data:

networks:
  airflow_net:
    driver: bridge
